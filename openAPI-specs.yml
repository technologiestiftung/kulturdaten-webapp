---
openapi: 3.0.2
info:
  title: API Kulturdaten.Berlin
  version: "0.1"
servers:
- url: https://api.kulturdaten.berlin/vbeta
paths:
  /events:
    get:
      tags:
      - Discover cultural data
      responses:
        "200":
          description: OK
    post:
      tags:
      - Maintain cultural data
      responses:
        "200":
          description: OK
  /events/bulk-creation:
    post:
      tags:
      - Maintain cultural data
      responses:
        "200":
          description: OK
  /events/today:
    get:
      tags:
      - Discover cultural data
      responses:
        "200":
          description: OK
  /events/past:
    get:
      tags:
      - Discover cultural data
      responses:
        "200":
          description: OK
  /events/{id}:
    get:
      tags:
      - Discover cultural data
      parameters:
      - name: id
        in: path
        description: The event ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    patch:
      tags:
      - Maintain cultural data
      parameters:
      - name: id
        in: path
        description: The event ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /events/{id}/event-dates:
    get:
      tags:
      - Discover cultural data
      parameters:
      - name: id
        in: path
        description: The event ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
    post:
      tags:
      - Maintain cultural data
      parameters:
      - name: id
        in: path
        description: The event ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /events/{id}/event-dates/{date-id}:
    get:
      tags:
      - Discover cultural data
      parameters:
      - name: id
        in: path
        description: The event ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: date-id
        in: path
        description: The event ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Maintain cultural data
      parameters:
      - name: id
        in: path
        description: The event ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: date-id
        in: path
        description: The event ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /events/{id}/event-dates/{date-id}/iCalendar:
    get:
      tags:
      - Discover cultural data
      parameters:
      - name: id
        in: path
        description: The event ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: date-id
        in: path
        description: The event ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /event-locations:
    get:
      tags:
      - Discover cultural data
      responses:
        "200":
          description: OK
    post:
      tags:
      - Maintain cultural data
      responses:
        "200":
          description: OK
  /event-locations/{id}:
    get:
      tags:
      - Discover cultural data
      parameters:
      - name: id
        in: path
        description: The location ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
    patch:
      tags:
      - Maintain cultural data
      parameters:
      - name: id
        in: path
        description: The location ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /organizers:
    get:
      tags:
      - Discover cultural data
      responses:
        "200":
          description: OK
    post:
      tags:
      - Maintain cultural data
      responses:
        "200":
          description: OK
  /organizers/{id}:
    get:
      tags:
      - Discover cultural data
      parameters:
      - name: id
        in: path
        description: The organizer ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
    patch:
      tags:
      - Maintain cultural data
      parameters:
      - name: id
        in: path
        description: The organizer ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /kinds/culture/tags:
    get:
      tags:
      - Discover cultural data
      - Maintain cultural data
      responses:
        "200":
          description: OK
  /media/{id}:
    get:
      tags:
      - Discover cultural data
      parameters:
      - name: id
        in: path
        description: The media ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
  /media/{id}/data:
    get:
      tags:
      - Discover cultural data
      parameters:
      - name: id
        in: path
        description: The media ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
components:
  schemas:
    Location:
      type: object
      properties:
        kind:
          type: string
          default: culture#location
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        published:
          type: boolean
        visibility:
          type: string
          default: public
          enum:
          - public
          - private
        name:
          $ref: '#/components/schemas/ShortInternationalizedText'
        description:
          $ref: '#/components/schemas/InternationalizedDescriptionText'
    Event:
      required:
      - continuously
      - description
      - kind
      - locations
      - organizer
      - published
      - title
      - visibility
      type: object
      properties:
        kind:
          type: string
          default: culture#event
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        published:
          type: boolean
        visibility:
          type: string
          default: public
          enum:
          - public
          - private
        title:
          $ref: '#/components/schemas/ShortInternationalizedText'
        subtitle:
          $ref: '#/components/schemas/ShortInternationalizedText'
        summary:
          $ref: '#/components/schemas/ShortInternationalizedText'
        description:
          $ref: '#/components/schemas/InternationalizedDescriptionText'
        continuously:
          type: boolean
        eventDates:
          type: array
          items:
            $ref: '#/components/schemas/EventDate'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/EventLocationReference'
        organizer:
          $ref: '#/components/schemas/OrganizerReference'
        media:
          $ref: '#/components/schemas/Media'
        admission:
          $ref: '#/components/schemas/Admission'
        additionalInformation:
          $ref: '#/components/schemas/AdditionalInformation'
    EventDate:
      type: object
      properties:
        id:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        published:
          type: boolean
        cancelled:
          type: boolean
        additionalTitle:
          $ref: '#/components/schemas/ShortInternationalizedText'
        description:
          $ref: '#/components/schemas/ShortInternationalizedText'
        locationNote:
          $ref: '#/components/schemas/InternationalizedText'
        ticketLink:
          type: string
          format: uri
        registrationLink:
          type: string
          format: uri
    EventLocationReference:
      required:
      - id
      properties:
        id:
          type: string
        displayName:
          $ref: '#/components/schemas/ShortInternationalizedText'
        note:
          $ref: '#/components/schemas/InternationalizedText'
      description: "A reference to an event location. This can be provided with an event-specific note. The note describes the specifics of the location in relation to the event. For example, specific information about the starting point of a tour. The displayName field contains the title of the location at the time of referencing. Its read-only."
    OrganizerReference:
      required:
      - id
      properties:
        id:
          type: string
        displayName:
          $ref: '#/components/schemas/ShortInternationalizedText'
    Media:
      properties:
        featuredImage:
          $ref: '#/components/schemas/MediaReference'
        imageGallery:
          maxItems: 4
          type: array
          items:
            $ref: '#/components/schemas/MediaReference'
        featuredVideo:
          $ref: '#/components/schemas/MediaReference'
    MediaReference:
      properties:
        id:
          type: string
        url:
          type: string
          format: uri
        mimetype:
          type: string
        alternateText:
          $ref: '#/components/schemas/ShortInternationalizedText'
    Admission:
      properties:
        ticketRequired:
          type: boolean
        ticketLink:
          type: string
          format: uri
        registrationRequired:
          type: boolean
        registrationLink:
          type: string
          format: uri
    Categorization:
      required:
      - categories
      - event-types
      properties:
        eventTypes:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        topicCategories:
          type: array
          items:
            $ref: '#/components/schemas/Categorization_topicCategories'
        keywords:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    AdditionalInformation:
      type: object
      properties:
        categorization:
          $ref: '#/components/schemas/Categorization'
        languageOptions:
          $ref: '#/components/schemas/LanguageOptions'
        audience:
          $ref: '#/components/schemas/Audience'
        specialSensorStimuli:
          $ref: '#/components/schemas/SpecialSensorStimuli'
        peakHours:
          type: array
          items:
            $ref: '#/components/schemas/PeakHour'
        externalLinks:
          type: array
          items:
            $ref: '#/components/schemas/ExternalLink'
    LanguageOptions:
      type: object
      properties:
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        additionalLanguageOptions:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        note:
          $ref: '#/components/schemas/InternationalizedText'
    Audience:
      properties:
        eventEspeciallyForOptions:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    SpecialSensorStimuli:
      properties:
        stimuliFromLight:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        stimuliFromSound:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        otherEffects:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        contentTriggers:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    PeakHour:
      type: object
      properties:
        daysOfWeek:
          type: array
          items:
            type: string
            enum:
            - Friday
            - Monday
            - PublicHolidays
            - Saturday
            - Sunday
            - Thursday
            - Tuesday
            - Wednesday
        start:
          type: string
          format: time
        end:
          type: string
          format: time
    ExternalLink:
      properties:
        url:
          type: string
          format: uri
        displayName:
          $ref: '#/components/schemas/ShortInternationalizedText'
    Tag:
      type: object
      properties:
        id:
          type: string
        displayName:
          $ref: '#/components/schemas/ShortInternationalizedText'
    ShortInternationalizedText:
      required:
      - de
      type: object
      properties:
        de:
          maxLength: 150
          minLength: 3
          type: string
      additionalProperties:
        maxLength: 150
        minLength: 3
        type: string
      description: "A short (max. 150 characters) text that can be in different languages. German (de) is required. In addition, an English translation (en) and a text in simple language (de-easy) are recommended. The text is stored in a dictionary with an ISO-639-1 code as the key and the translation as the value. A special feature is the code de-easy, which refers to a text in simple German."
      example:
        de: Text mit maximal 150 Zeichen.
        en: Text with a maximum of 150 characters.
        de-easy: Kurzer Text in einfacher deutscher Sprache.
    InternationalizedText:
      required:
      - de
      type: object
      properties:
        de:
          maxLength: 500
          minLength: 3
          type: string
      additionalProperties:
        maxLength: 500
        minLength: 3
        type: string
      description: "A text that can be in different languages. German (de) is required. In addition, an English translation (en) and a text in simple language (de-easy) are recommended. The text is stored in a dictionary with an ISO-639-1 code as the key and the translation as the value. A special feature is the code de-easy, which refers to a text in simple German."
      example:
        de: Text mit maximal 500 Zeichen.
        en: Text with a maximum of 500 characters.
        de-easy: Kurzer Text in einfacher deutscher Sprache.
    InternationalizedDescriptionText:
      required:
      - de
      type: object
      properties:
        de:
          maxLength: 1500
          minLength: 3
          type: string
      additionalProperties:
        maxLength: 1500
        minLength: 3
        type: string
      description: "A text that can also contain Markdown as a markup language. The text that can be in different languages. German (de) is required. In addition, an English translation (en) and a text in simple language (de-easy) are recommended. The text is stored in a dictionary with an ISO-639-1 code as the key and the translation as the value. A special feature is the code de-easy, which refers to a text in simple German. Please use Markdown very sparingly."
      example:
        de: '**Text** mit maximal 1500 Zeichen (inklusiv Auszeichnung). Der auch *Markdown* als Auszeichnungssprache enthalten kann.'
        en: '**Text** with a maximum of 1500 characters (including annotation). Which can also contain *Markdown* as a markup language.'
        de-easy: Der Text kann auch Markdown sein.
    Categorization_topicCategories:
      type: object
      properties:
        mainCategory:
          $ref: '#/components/schemas/Tag'
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
